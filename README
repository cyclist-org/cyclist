CONTACT:
For help to get things working: nikos.gorogiannis (at) gmail (dot) com
Software and PDF copies of papers: 

  http://www.cs.mdx.ac.uk/staffpages/nikosgkorogiannis/  


QUICKSTART:
The executables in the tar file have been linked in such a way that they should
work without any non-standard dependencies on an x86_64 Linux system.

The tools are:

fomain.native  : first-order prover.
slmain.native  : separation logic entailment prover.
prmain.native  : program termination prover for a goto language (unmaintained). 
abdmain.native : inductive precondition abducer for a goto language (unmaintained). 
pr2main.native  : program termination prover for a while language. 
abd2main.native : inductive precondition abducer for a while language. 
ccmain.native  : separation logic consistency checker for inductive definitions.

Running an executable without arguments will print out instructions for use. 
Running "make all-tests" will run a test suite for some provers.
See the Makefile for other possibilities.

The theory/design behind the first three provers is described in   

  James Brotherston, Nikos Gorogiannis, and Rasmus L. Petersen. 
  A generic cyclic theorem prover, accepted for publication in APLAS, 2012.


COMPILING:
To compile things from scratch you will need to cd into the directory 
src/soundness and follow the README included there.

In addition, you will need:
OCaml native tools (tested with 4.01 but should work with 3.12), menhir and 
ocaml-melt.  

In non-standard installations you may need to change the paths in the Makefile.

Then, just run "make" and hopefully it should work :) 

