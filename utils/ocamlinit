Format.set_margin (Sys.command "exit $(tput cols)");;

#directory "_build";;
#directory "_build/generic";;
#directory "_build/seplog";;
#directory "_build/firstorder";;
#directory "_build/termination";;
#directory "_build/abduction";;
#directory "_build/temporal";;

#install_printer Cchecker.pp;;
#install_printer Symheap.Term.pp;;
#install_printer Symheap.Heap.pp;;
#install_printer Symheap.Form.pp;;
#install_printer Symheap.Seq.pp;;
#install_printer Slprover.pp_proof;;
#install_printer Tempform.Form.pp;;
#install_printer Tempform.Seq.pp;;

open Tlfront;;

let s = pseq("x=y");;

(*
open Slfront;;

let str_seqs = [
  "x->y * RList(y,z) |- RList(x,z)";
  "RList(x,y) * RList(y,z) |- RList(x,z)";
  "List(x,y) * y->z |- List(x,z)";
  "List(x,y) * List(y,z) |- List(x,z)";
  "PeList(x,y) * y->z |- PeList(x,z)";
  "PeList(x,y) * PeList(y,z) |- PeList(x,z)";
  "DLL(x,y,z,w) |- SLL(x,y)";
  "DLL(x,y,z,w) |- BSLL(z,w)";           
  "DLL(x,y,z,w) * DLL(a,x,w,b) |- DLL(a,y,z,b)";
  "ListO(x,y) * ListO(y,z) |- ListE(x,z)";
  "ListE(x,y) * ListE(y,z) |- ListE(x,z)";
  "ListE(x,y) * ListO(y,z) |- ListO(x,z)";
  "BinListFirst(x) |- BinTree(x)";
  "BinListSecond(x) |- BinTree(x)";
  "BinPath(x,z) * BinPath(z,y) |- BinPath(x,y)";
  "BinPath(x,y) |- BinTreeSeg(x,y)";
  "BinTreeSeg(x,z) * BinTreeSeg(z,y) |- BinTreeSeg(x,y)";
  "BinTreeSeg(x,y) * BinTree(y) |- BinTree(x)";
  "x!=z * x->y * ls(y,z) |- ls(x,z)";
  "ls(x,y) * ls(y,nil) |- ls(x,nil)";
  "ListE_1(x,y) \\/ ListO_1(x,y) |- List_2(x,y)"
];; *)

(* let seqs = List.map pseq str_seqs;; *)
(* let prfs = List.map Prover.idfs seqs;; *)
