P {
  one(x1) * one(x2) * Q(x1,x2) => P(x1,x2)
} ;

Q {
  zero(y1) * zero(y2) => Q(y1,y2) |
  succ2circuit(x1,x2,y1,y2) * Q(x1,x2) => Q(y1,y2)
} ;

succ2circuit {
  not(x1,y1) * xor(x1,x2,y2) => succ2circuit(x1,x2,y1,y2)
} ;

not {
  zero(x) * one(y) => not(x,y) |
  one(x) * zero(y) => not(x,y)
} ;

xor {
  zero(x) * zero(y) * zero(z) => xor(x,y,z) |
  zero(x) * one(y) * one(z) => xor(x,y,z) |
  one(x) * zero(y) * one(z) => xor(x,y,z) |
  one(x) * one(y) * zero(z) => xor(x,y,z)
} ;

and {
  zero(x) * zero(z) => and(x,y,z) |
  zero(y) * zero(z) => and(x,y,z) |
  one(x) * one(y) * one(z) => and(x,y,z)
} ;

one {
  x!=nil => one(x)
} ;

zero {
  x=nil => zero(x)
}
