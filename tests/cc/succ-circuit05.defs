P {
  one(x1) * one(x2) * one(x3) * one(x4) * one(x5) * Q(x1,x2,x3,x4,x5) => P(x1,x2,x3,x4,x5)
} ;

Q {
  zero(y1) * zero(y2) * zero(y3) * zero(y4) * zero(y5) => Q(y1,y2,y3,y4,y5) |
  succ5circuit(x1,x2,x3,x4,x5,y1,y2,y3,y4,y5) * Q(x1,x2,x3,x4,x5) => Q(y1,y2,y3,y4,y5)
} ;

succ5circuit {
  not(x1,y1) * xor(x1,x2,y2) * and(x1,x2,z3) * xor(z3,x3,y3) * and(z3,x3,z4) * xor(x4,y4,z4) * and(z4,x4,z5) * xor(x5,y5,z5) => succ5circuit(x1,x2,x3,x4,x5,y1,y2,y3,y4,y5)
} ;

not {
  zero(x) * one(y) => not(x,y) |
  one(x) * zero(y) => not(x,y)
} ;

xor {
  zero(x) * zero(y) * zero(z) => xor(x,y,z) |
  zero(x) * one(y) * one(z) => xor(x,y,z) |
  one(x) * zero(y) * one(z) => xor(x,y,z) |
  one(x) * one(y) * zero(z) => xor(x,y,z)
} ;

and {
  zero(x) * zero(z) => and(x,y,z) |
  zero(y) * zero(z) => and(x,y,z) |
  one(x) * one(y) * one(z) => and(x,y,z)
} ;

one {
  x!=nil => one(x)
} ;

zero {
  x=nil => zero(x)
}
