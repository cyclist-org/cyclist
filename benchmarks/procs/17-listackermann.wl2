fields: next;

proc Ack(x, y, z)
	precondition: ls[a](x,nil) * ls(y,nil) * z->v';
	postcondition: ls[a](x,nil) * z->v' * ls(v',nil);
{
	if x = nil then
	
		a := new();
		a.next := y;
		z.next := a
		
	else
	
		b := new();
		b.next := nil;

		if y = nil then
		
			assert([b'] < [a] : x->w' * ls[b'](w',nil) * z->v' * b->nil);
			a := x.next;
			Ack(a, b, z)
		
		else
		
			a := y.next;
			free(y);
			Ack(x, a, b);
			a := x.next;
			Ack(a, b, z)
		
		fi
	
	fi
}
