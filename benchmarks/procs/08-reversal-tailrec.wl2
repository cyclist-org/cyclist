fields: next;

proc reverse(x, acc)
precondition: x -> v' * ls[a](v', nil) * acc -> w' * ls[b](w', nil);
postcondition: x -> nil * acc -> z' * ls[c'](z', nil);
{
	list := x.next;
	if list != nil then
	
		rest := list.next;
		x.next := rest;
		
		accumulator := acc.next;
		list.next := accumulator;
		acc.next := list;
		
		reverse(x, acc)
		
	fi
}

proc main(x)
	precondition: ls(x, nil);
	postcondition: ls(x', nil);
{
	ptr := new();
	ptr.next := x;
	
	acc := new();
	list := nil;
	acc.next := list;
	
	reverse(ptr, acc);
	
	free(ptr);
	free(acc)
}